/*!
 * jQuery Filer(Input File)
 * Copyright (c) 2013 CreativeDream
 * Website: http://creativedream.net/plugins/
 * Version: 1.0 (15-Nov-2013)
 * Requires: jQuery v1.7.1 or later
 */
(function(e) {
    e.fn.filer = function(t) {
        var n = e.extend({}, e.fn.filer.defaults, t);
        this.each(function(t, r) {
            var i, s = e(r),
                o, u = e("input:file").length == 1 ? "" : "-" + e("input:file").index(s),
                a, f = {
                    init: function() {
                        i = this;
                        k = [];
                        i._changeInput();
                        s.change(i.onChange);
                        if (n.dragDrop && !e.isEmptyObject(n.dragDrop)) {
                            i.dropZone = !n.dragDrop.dropBox ? o ? o : s : e(n.dragDrop.dropBox);
                            i.dropZone.bind("drop", i._drop).bind("dragenter", i._dragEnter).bind("dragover", i._dragOver).bind("dragleave", i._dragLeave)
                        }
                    },
                    _clickFile: function(e) {
                        if (o.find("#input-thumbs ul li").size() == 0 && e.target != o) {
                            s.click()
                        }
                    },
                    _changeInput: function() {
                        s.wrap('<div id="jfiler' + u + '"></div>');
                        a = s.parent("#jfiler" + u);
                        if (n.changeInput) {
                            switch (typeof n.changeInput) {
                                case "boolean":
                                    caption = n.captions;
                                    o = e('<div class="file"><span class="filer-button">' + caption.choose + '</span><span class="filer-feedback">' + caption.feedback + "</span></div>");
                                    s.after(o);
                                    break;
                                case "string":
                                    o = e(n.changeInput);
                                    s.after(o);
                                    break
                            }
                            s.css({
                                position: "absolute",
                                left: "-9999px",
                                top: "-9999px",
                                "z-index": "-9999"
                            });
                            o.on("click", i._clickFile);
                        }
                        if (n.limit >= 2) {
                            s.attr("multiple", "multiple");
                            s.attr("name").slice(-2) != "[]" ? s.attr("name", s.attr("name") + "[]") : null
                        }
                    },
                    _clearInput: function(t) {
                        if (!t) {
                            s.val("");
                            n.onEmpty != null && typeof n.onEmpty == "function" ? n.onEmpty(i.appendTo ? i.appendTo : "undefined") : null
                        }
                        if (n.changeInput) {
                            if (typeof n.changeInput == "boolean") {
                                a.find(o).html('<span class="filer-button">' + caption.choose + '</span><span class="filer-feedback">' + caption.feedback + "</span>")
                            } else {
                                a.find(o).html(e(n.changeInput).html())
                            }
                        }
                        a.find("div#input-thumbs").remove();
                        a.find('input[name^="inputOrdBox"]').remove();
                        i._setFeedbackText(0);
                        k = [];
                    },
                    _setFeedbackText: function(e) {
                        var t = e == null ? i.files.length : e,
                            r = t == 0 ? n.captions.feedback3 : t + " " + n.captions.feedback2;
                        a.find(".file .filer-feedback").text(r)
                    },
                    _inputFilesCheck: function() {
                        var r = i.files;
                        if (typeof r == "undefined") {
                            return true
                        }
                        if (n.limit != null && r.length > n.limit) {
                            alert(n.captions.errors.filesLimit.replace(new RegExp("%allowed-limit%","g"),n.limit));
                            return false
                        }
                        for (t = 0; t < r.length; t++) {
                            var s = r[t].name.split(".").pop().toLowerCase();
                            if (n.extensions != null && e.inArray(s, n.extensions) == -1 && (n.newExt == null || e.inArray(s, n.newExt) == -1)) {
                                alert(n.captions.errors.filesType.replace(new RegExp("%allowed-types%","g"),n.types));
                                return false;
                                break
                            }
                            if (n.maxSize != null && r[t].size > n.maxSize * 1048576) {
                                alert(n.captions.errors.filesSize.replace(new RegExp("%file-name%","g"),r[t].name).replace(new RegExp("%maxSize%","g"),n.maxSize));
                                return false;
                                break
                            }
                        }
                        return true
                    },
                    _thumbBox: function(t, r, k) {
                        var s = i.files,
                            o = n.maxChar,
                            u = n.iconPath.slice(-1) != "/" ? n.iconPath + "/" : n.iconPath,
                            a = i.appendTo.find("#input-thumbs ul");
                        var f = s[t].name.split(".").pop().toLowerCase(),
                            l = s[t].name.slice(0, -f.length).length > o ? "..." : ".",
                            c = s[t].name.slice(0, -f.length - 1).slice(0, o - 2) + l + f,
                            h = s[t].name,
                            p = (s[t].size / 1048576).toString().slice(0, 5),
                            d = s[t].type.split("/", 1).toString().toLowerCase(),
                            v = n.removeFiles ? ' data-idx="' + t + '"' : "",
                            m = n.removeFiles ? "<span></span>" : "";              
                        switch (d) {
                            case "image":
                                if (window.File && window.FileList && window.FileReader) {
                                    var y = new FileReader;
                                    y.onload = function(n) {
                                        var o = '<img src="' + n.target.result + '" title="' + s[t].name + '" />';
                                        e(o).error(function() {
                                            alert(s[t].name + " is broken Image!");
                                            console.log("What are you trying to do with „" + s[t].name + "”?");
                                            i._clearInput()
                                        }).load(function() {
                                            g = i._tempChange(c, h, d, p, f, n.target.result, t, m, v);
                                            e(g).hide().find('img').load(function() {
  																$(this).closest('li').prependTo(a);
  																i._defaultSort();
  																$(this).closest('li').fadeIn("slow", function() {
                                                		i._onSelect(t, r, k)
                                           		 });
															});
                                        })
                                    };
                                    y.readAsDataURL(s[t])
                                } else {
                                    g = i._tempChange(c, h, d, p, f, u + "image.png", t, m, v);
                                    e(g).hide().find('img').load(function() {
  																$(this).closest('li').prependTo(a);
  																i._defaultSort();
  																$(this).closest('li').fadeIn("slow", function() {
                                                		i._onSelect(t, r)
                                           		 });
															});
                                }
                                break;
                            case "audio":
                                g = i._tempChange(c, h, d, p, f, u + "audio.png", t, m, v);
                                e(g).hide().find('img').load(function() {
  																$(this).closest('li').prependTo(a);
  																i._defaultSort();
  																$(this).closest('li').fadeIn("slow", function() {
                                                		i._onSelect(t, r)
                                           		 });
															});
                                break;
                            case "video":
                                g = i._tempChange(c, h, d, p, f, u + "video.png", t, m, v);
                                e(g).hide().find('img').load(function() {
  																$(this).closest('li').prependTo(a);
  																i._defaultSort();
  																$(this).closest('li').fadeIn("slow", function() {
                                                		i._onSelect(t, r)
                                           		 });
															});
                                break;
                            default:
                                if (e.inArray(f, n.newExt) == -1) {
                                    u += "file.png"
                                } else {
                                    u += f + ".png"
                                }
                                g = i._tempChange(c, h, d, p, f, u, t, m, v);
                                e(g).hide().find('img').load(function() {
  																$(this).closest('li').prependTo(a);
  																i._defaultSort();
  																$(this).closest('li').fadeIn("slow", function() {
                                                		i._onSelect(t, r)
                                           		 });
															});
                                break
                        }
                    },
                    _tempChange: function(t, k, r, i, s, o, u, a, f) {
                    		var b= {title:t,fileName:k,fileType:r,fileSize:i,fileExt:s,image:o,fileIndex:u,removeIcon:a,removeIndex:f};								
								var c = n.template != null && typeof n.template == "function" ? n.template(b) : typeof n.template == "string" ? n.template.replace(new RegExp("%title%","g"),b.title).replace(new RegExp("%original-name%","g"),b.fileName).replace(new RegExp("%type%","g"),b.fileType).replace(new RegExp("%size%","g"),b.fileSize).replace(new RegExp("%extension%","g"),b.fileExt).replace(new RegExp("%image-url%","g"),b.image).replace(new RegExp("%index%","g"),b.fileIndex).replace(new RegExp("%remove-icon%","g"),b.removeIcon).replace(new RegExp("%remove-index%","g"),b.removeIndex) : null;
								return "<li"+b.removeIndex+">"+(c!=null && c!=false ? c : null)+"</li>";
   						},
                    _defaultSort: function(){
								var sorted=$(i.appendTo).find("#input-thumbs ul li").sort(function(e,t){var n=parseInt($(e).attr("data-idx"));var r=parseInt($(t).attr("data-idx"));return n<r?-1:n>r?1:0});$(i.appendTo).find("#input-thumbs ul").html(sorted);								                
                    },
                    onChange: function(r, o) {
                        var o = !o ? s.get(0).files : o;
                        i.files = o;
                        if (o) {
                            if (!i._inputFilesCheck()) {
                                i._clearInput();
                                return false
                            } else {
                                i._clearInput(true)
                            }
                            i._setFeedbackText();
                            if (n.showThumbs) {
                                if (n.beforeShow != null && typeof n.beforeShow == "function" ? !n.beforeShow(e(this), a) : false) {
                                    return false
                                }
                                if (n.appendTo != null && n.appendTo != "#jfiler" && n.appendTo.length != 0) {                               
                                    e(n.appendTo).html('<div id="input-thumbs"><ul /></div>');
                                    i.appendTo  = e(n.appendTo);
                                    e(n.appendTo).on("click", "#input-thumbs ul li[data-idx] span, #input-thumbs ul li[data-idx] div.done-erase", function(t) {
                                   		 i._remove(t, e(this))
                              	   });
                                } else {
                                    a.append('<div id="input-thumbs"><ul /></div>');
                                    i.appendTo = a;
                                		a.on("click", "#input-thumbs ul li[data-idx] span, #input-thumbs ul li[data-idx] div.done-erase", function(t) {
                                   		 i._remove(t, e(this))
                              	   });
                                }
                                for (t = 0; t < o.length; t++) {
                                    i._thumbBox(t, e(this))
                                }
                            } else {
                                for (t = 0; t < o.length; t++) {
                                    i._onSelect(t, e(this))
                                }
                            }
                        }
                    },
                    _uploadFile: function(t, r, s) {
                        var o = new FormData,
                            u = s[t],
                            f = n.uploadFile,
                            l = a.find("#input-thumbs ul li[data-idx^='" + t + "']");
                        o.append(r, u);
                        f.data && !e.isEmptyObject(f.data) ? e.each(f.data, function(e, t) {
                            o.append(e, t)
                        }) : null;
                        e.ajax({
                            url: f.url,
                            type: "POST",
                            enctype: "multipart/form-data",
                            xhr: function() {
                                myXhr = e.ajaxSettings.xhr();
                                if (myXhr.upload) {
                                    myXhr.upload.addEventListener("progress", function(e) {
                                        i._progressHandling(e, l)
                                    }, false)
                                }
                                return myXhr
                            },
                            beforeSend: function() {
                                l.find(".progress-bar").remove();
                                f.beforeSend != null ? f.beforeSend(l) : null
                            },
                            success: function(e) {
                                f.success != null ? f.success(e, l, l.find(".progress-bar")) : null;
                                t == s.length - 1 && f.onUploaded != null ? f.onUploaded(l) : null
                            },
                            error: function(e) {
                                f.error != null ? f.error(e, l, l.find(".progress-bar")) : null
                            },
                            data: o,
                            cache: false,
                            contentType: false,
                            processData: false
                        })
                    },
                    _progressHandling: function(e, t) {
                        if (e.lengthComputable) {
                            var n = Math.round(e.loaded * 100 / e.total).toString();
                            t.find(".progress-bar").width(n + "%");
                            if (n == 100) {
                                i._progressHide(t)
                            }
                        }
                    },
                    _progressHide: function(e) {
                        setTimeout(function() {
                            n.uploadFile.progressEnd && n.uploadFile.progressEnd != null ? n.uploadFile.progressEnd(e.find(".progress-bar")) : null
                        }, 300)
                    },
                    _onSelect: function(t, r, m) {
                        if (n.uploadFile && !e.isEmptyObject(n.uploadFile)) {
                            i._uploadFile(t, s.attr("name"), i.files)
                        }
                        n.onSelect != null && typeof n.onSelect == "function" ? n.onSelect(r, a, i.appendTo ? i.appendTo.find("#input-thumbs ul") : "undefined", i.appendTo ? i.appendTo.find("li[data-idx='"+t+"']") : "undefined", i.files[t]) : null                  
                        k.push(t);
                        if (k.length >= i.files.length) {
                        	n.afterShow != null && typeof n.afterShow == "function" ? n.afterShow(r, a, i.appendTo ? i.appendTo.find("#input-thumbs ul") : "undefined") : null                  									          	 
                        }
                    },
                    _dragEnter: function(e) {
                        e.preventDefault();
                        e.stopPropagation()
                    },
                    _dragOver: function(e) {
                        e.preventDefault();
                        e.stopPropagation();
                        n.dragDrop.dragOver ? n.dragDrop.dragOver(e, i.dropZone) : null
                    },
                    _dragLeave: function(e) {
                        e.preventDefault();
                        e.stopPropagation();
                        n.dragDrop.dragOut ? n.dragDrop.dragOut(e, i.dropZone) : null
                    },
                    _drop: function(e) {
                        e.preventDefault();
                        var t = e.originalEvent.dataTransfer.files,
                            r = new FormData;
                        fileName = s.attr("name");
                        for (var o = 0; o < t.length; o++) {
                            r.append(fileName, t[o])
                        }
                        n.dragDrop.drop ? n.dragDrop.drop(e, r, a) : null;
                        i.onChange(e, t)
                    },
                    _remove: function(t, r) {
                        if (!n.removeFiles || n.removeFiles == false) {
                            return
                        }
                        var s = r.parent().attr("data-idx"),
                            o = a.find("#input-thumbs ul li[data-idx='" + s + "']"),
                            f = u.length == 0 ? "-0" : u;
                        if (n.onRemove != null && typeof n.onRemove == "function" ? n.onRemove(t, o, a, a.find("#input-thumbs ul"),s) : true) {
                            o.fadeOut(300, function() {
                                e(this).remove();
                                $items = a.find("#input-thumbs ul li[data-idx]");
                                if ($items.length > 0) {
                                    var t = a.find('input[name^="inputOrdBox' + f + '"]');
                                    if (t.size() == 0) {
                                        var n = s + ",";
                                        a.append('<input type="hidden" name="inputOrdBox' + f + '" value="' + n + '" />')
                                    } else {
                                        var n = t.val() + s + ",";
                                        a.find('input[name^="inputOrdBox' + f + '"]').val(n)
                                    }
                                    i._setFeedbackText($items.length)
                                } else {
                                    i._clearInput()
                                }
                            })
                        }
                        return false
                    }
            };
            f.init()
        });
        return this
    };
    e.fn.filer.clean = function () {
    		f._clearInput(null);
    }
    e.fn.filer.defaults = {
        types: "Image, Audio, Video",
        limit: 10,
        maxSize: 3,
        extensions: ["jpg", "jpeg", "png", "gif","wmv","mp3","mp4"],
        newExt: null,
        changeInput: true,
        showThumbs: true,
        iconPath: "./images/",
        appendTo: null,
        maxChar: 15,
        removeFiles: true,
        template: function(r){return '<img src="'+r.image+'" title="'+r.fileName+'" /><em>'+r.title+'</em> '+r.removeIcon+'';},
        uploadFile: null,
        dragDrop: null,
        onCreate: null,
        beforeShow: null,
        onSelect: null,
        afterShow: null,
        onRemove: null,
        onEmpty: null,
        captions: {
            choose: "Choose",
            feedback: "Choose files",
            feedback2: "files were chosen",
            feedback3: "No file chosen",
            errors: {
            	filesLimit: "Only %allowed-limit% files are allowed to be uploaded", 
            	filesType: "Only %allowed-types% are allowed", 
            	filesSize: "%file-name% is too large! Please upload file up to %maxSize% MB"
            }
        }
    }
})(jQuery);